type User {
  id: ID!
  firstName: String
  lastName: String
  username: String!
  salt: String!
  password: String!
}

input UserCreationInput {
  firstName: String
  lastName: String
  username: String!
  password: String!
}

input SignupInput {
  firstName: String!
  lastName: String!
  username: String!
  password: String!
}

type AuthenticationResult {
  user: User
  jwt: String
  authError: String
}

extend type Query {
  users: [User!]!
  user(id: ID!): User
}

extend type Mutation {
  signup(data: SignupInput!): AuthenticationResult!
  createUser(input: UserCreationInput): User!
  deleteUser(id: ID): Int!
}
